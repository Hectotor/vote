rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Règle pour la lecture des profils utilisateurs (pour l'avatar)
    match /users/{userId} {
      allow read: if true;  // Tout le monde peut lire les profils
      allow write: if request.auth != null && request.auth.uid == userId;  // Seul l'utilisateur peut modifier son profil
    }

    // Règle pour la collection likes
    match /likes/{likeId} {
      // Lecture : tout le monde peut voir qui a liké
      allow read: if true;
      
      // Création : uniquement si authentifié et si l'utilisateur est celui qui like
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      
      // Suppression : uniquement si authentifié et si l'utilisateur est celui qui a liké
      allow delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }

    match /posts/{postId} {
      // Lecture : tout le monde peut lire les posts
      allow read: if true;
      
      // Création : uniquement si authentifié
      allow create: if request.auth != null;
      
      // Mise à jour : uniquement si authentifié
      // Pour le compteur de likes, tout utilisateur authentifié peut le mettre à jour
      allow update: if request.auth != null && (
        // Si la mise à jour concerne uniquement likesCount
        (request.resource.data.diff(resource.data).affectedKeys().hasOnly(['likesCount'])) ||
        // Ou si l'utilisateur est l'auteur du post
        resource.data.userId == request.auth.uid
      );
      
      // Supprimer : uniquement si authentifié et propriétaire
      allow delete: if request.auth != null && resource.data.userId == request.auth.uid;

      // Sous-collection commentaires
      match /commentsPosts/{commentId} {
        allow read: if true;
        allow create: if request.auth != null;
        allow update, delete: if request.auth != null && request.auth.uid == resource.data.userId;
      }
    }
    
    // Règles pour les utilisateurs et leurs sous-collections
    match /users/{userId} {
      // Profil utilisateur (userData)
      match /userData/{document} {
        allow read: if true;
        allow write: if request.auth != null && request.auth.uid == userId;
      }
      
      // Posts sauvegardés
      match /savedPosts/{postId} {
        allow read: if request.auth != null && request.auth.uid == userId;
        allow create, delete: if request.auth != null && request.auth.uid == userId;
      }
      
      // Posts signalés
      match /reportedPosts/{postId} {
        allow read: if request.auth != null;
        allow create: if request.auth != null && request.auth.uid == userId;
      }
    }

    // Règles pour les requêtes collectionGroup
    match /{path=**}/commentsPosts/{commentId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }

    match /{path=**}/savedPosts/{postId} {
      allow read: if request.auth != null && request.auth.uid == request.auth.uid;
      allow write: if request.auth != null && request.auth.uid == request.auth.uid;
    }
  }
}