rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Utilisateurs
    match /users/{userId} {
      allow read: if true;
      allow create, update, delete: if request.auth != null && request.auth.uid == userId;
    }

    // Posts
    match /posts/{postId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }

    // Commentaires
    match /commentsPosts/{commentId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }

    // Likes sur les posts
    match /likes/{likeId} {
      allow read: if true;
      allow create, delete: if request.auth != null && request.auth.uid == request.resource.data.userId;
    }

    // Likes sur les commentaires
    match /commentLikes/{likeId} {
      allow read: if true;
      allow create, delete: if request.auth != null && request.auth.uid == request.resource.data.userId;
    }

    // Followers
    match /followers/{followerId} {
      allow read: if true;
      allow create, delete: if request.auth != null && request.auth.uid == request.resource.data.userId;
    }

    // Hashtags (lecture seule)
    match /hashtags/{hashtagId} {
      allow read: if true;
    }

    // Mentions (lecture seule)
    match /mentions/{mentionId} {
      allow read: if true;
    }

    // Notifications
    match /notifications/{notifId} {
      allow read: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      allow delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }

    // Posts sauvegard√©s
    match /savedPosts/{savedId} {
      allow read, create, delete: if request.auth != null && request.auth.uid == request.resource.data.userId;
    }
  }
}